<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ESLint on Eduardo Nunes</title>
    <link>http://nunes.io/categories/eslint/</link>
    <description>Recent content in ESLint on Eduardo Nunes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 11 Mar 2016 14:18:00 +0000</lastBuildDate>
    <atom:link href="http://nunes.io/categories/eslint/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vim: How to setup local eslint (or any other linter)?</title>
      <link>http://nunes.io/notes/guide/vim-how-to-setup-eslint/</link>
      <pubDate>Fri, 11 Mar 2016 14:18:00 +0000</pubDate>
      
      <guid>http://nunes.io/notes/guide/vim-how-to-setup-eslint/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update (2016-03-11): this note contains instructions to setup any nodejs
linter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been using source code linting for two years. It is a simple step in the
development workflow that together with other best-practices improves
readability and maintainability of the source code.&lt;/p&gt;

&lt;p&gt;The integration of most part of the linters with Atom editor is usually a very
simple task however to integrate them with Vim or Emacs a small effort is
needed. To integrate ESLint with Vim you can use
&lt;a href=&#34;https://github.com/scrooloose/syntastic&#34; target=&#34;_blank&#34;&gt;Syntastic&lt;/a&gt; Vim plugin and configure
&lt;a href=&#34;http://eslint.org/&#34; target=&#34;_blank&#34;&gt;ESLint&lt;/a&gt; on it.&lt;/p&gt;

&lt;p&gt;At first sight (reading Syntastic github README.md file) it seems to be very
easy to do it and it is when you use a global instance of ESLint, however all
Node.js projects I work have ESLint specific rules and versions.&lt;/p&gt;

&lt;p&gt;Checkout below the snippet that must be added to your &lt;code&gt;~/.vimrc&lt;/code&gt; file to setup
local ESLint (or any other linter) support to your projects.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&amp;quot; Syntastic local linter support

let g:syntastic_javascript_checkers = []

function CheckJavaScriptLinter(filepath, linter)
	if exists(&#39;b:syntastic_checkers&#39;)
		return
	endif
	if filereadable(a:filepath)
		let b:syntastic_checkers = [a:linter]
		let {&#39;b:syntastic_&#39; . a:linter . &#39;_exec&#39;} = a:filepath
	endif
endfunction

function SetupJavaScriptLinter()
	let l:current_folder = expand(&#39;%:p:h&#39;)
	let l:bin_folder = fnamemodify(syntastic#util#findFileInParent(&#39;package.json&#39;, l:current_folder), &#39;:h&#39;)
	let l:bin_folder = l:bin_folder . &#39;/node_modules/.bin/&#39;
	call CheckJavaScriptLinter(l:bin_folder . &#39;standard&#39;, &#39;standard&#39;)
	call CheckJavaScriptLinter(l:bin_folder . &#39;eslint&#39;, &#39;eslint&#39;)
endfunction

autocmd FileType javascript call SetupJavaScriptLinter()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code above basically searches for binary files in the &lt;code&gt;node_modules/.bin&lt;/code&gt;
folder of the current nodejs project. The snippet above covers &lt;code&gt;eslint&lt;/code&gt; and
&lt;code&gt;standard&lt;/code&gt; linters.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m new to Vim / Vim Script, suggestions are welcome!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
